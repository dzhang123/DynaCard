package com.organization.dynacard;

import java.util.Collections;
import java.util.List;
import java.util.ArrayList;

import com.organization.dynacard.IDynaCard.CardParameters;
import com.organization.dynacard.IDynaCard.CardShape;

public class DynaCardFactory {
	
	public static CardShape getCardShape (List<CardParameters> values, double minimumAcceptableWeight) {
		
		List<Double> weights = new ArrayList<Double>();
		for (int i = 0; i < values.size(); i++) {
			weights.add(values.get(i).pumpWeight);
		}
		double maxWeight = Collections.max(weights);
		
		if (maxWeight < minimumAcceptableWeight)
			return CardShape.Flowing_Well;
		return NewCard(values).getShape();		
	}
	
	public static DynaCard NewCard(List<CardParameters> values) {
		List<Integer> pos = new ArrayList<Integer>();
		List<Double> xs = new ArrayList<Double>();
		List<Double> ys = new ArrayList<Double>();
		
		foreach (CardParameters param : values) {
			
		}
	}
	
}
